
# KeyMap/mine/TERM
-- Binds to delete/change/replace without yanking.

map("x", "<leader>p", '"_dP', "Replace without yanking")

map("n", "<leader>d", '"_d', "Delete without yanking") -- e.g <leader>dd deletes the current line without yanking it
map("n", "<leader>D", '"_D', "Delete until EOL without yanking")

map("n", "<leader>c", '"_c', "Change without yanking")
map("n", "<leader>C", '"_C', "Change until EOL without yanking")

-- Using the OS clipboard

map("", "<leader>y", '"+y', "Yank to clipboard") -- E.g: <leader>yy will yank current line to os clipboard
map("", "<leader>Y", '"+y$', "Yank until EOL to clipboard")

map("n", "<leader>p", '"+p', "Paste after cursor from clipboard")
map("n", "<leader>P", '"+P', "Paste before cursor from clipboard")


-- TODO: Check this plugins later
-- https://github.com/gbprod/yanky.nvim 
-- https://github.com/gennaro-tedesco/nvim-peekup
-- https://github.com/tversteeg/registers.nvim

-- https://ofirgall.github.io/learn-nvim/chapters/06-splits-and-actual-tabs.html
-- Tabline binds
map('n', '<C-q>', function() require('bufdelete').bufdelete(0, true) end) -- shift+Quit to close current tab
map('n', 'g1', function() require('bufferline').go_to_buffer(1, true) end)
map('n', 'g2', function() require('bufferline').go_to_buffer(2, true) end)
map('n', 'g3', function() require('bufferline').go_to_buffer(3, true) end)
map('n', 'g4', function() require('bufferline').go_to_buffer(4, true) end)
map('n', 'g5', function() require('bufferline').go_to_buffer(5, true) end)
map('n', 'g6', function() require('bufferline').go_to_buffer(6, true) end)
map('n', 'g7', function() require('bufferline').go_to_buffer(7, true) end)
map('n', 'g8', function() require('bufferline').go_to_buffer(8, true) end)
map('n', 'g9', function() require('bufferline').go_to_buffer(9, true) end)
map('n', 'g0', function() require('bufferline').go_to_buffer(10, true) end)
cicijcjjsi


lua/prefs/*
# autocmd.lua

# utils.lua
--  Generic autocmds
utils.lua
-- # Utils functions  (can be a package too)


